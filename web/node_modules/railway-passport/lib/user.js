exports.findOrCreate = function (data, done) {
    // console.log("in passport for railway findorcreate")
    console.log("data variable")
    console.log(data)

    /* FACEBOOK */
    if (data.facebookId) {
        var facebookdata = data.profile._json;
        // var userEmail = data.profile.emails[0].value;
        User.all({
            where: {
                facebookId: facebookdata.id,
                email: facebookdata.email,
                facebookAccessToken: data.token
            }, limit: 1
        }, function (err, user) {
            if (user[0]){
                user = user[0];
                console.log("got facebook user")
                // console.log(user)
                return done(err, user);
            } 
            else{
                console.log("create a new facebook user")
                User.create({
                    email: facebookdata.email,
                    facebookId: facebookdata.id,
                    facebookAccessToken: data.token,
                    facebookUsername: facebookdata.username,
                    facebookId: data.facebookId,
                    // username: facebookdata.username,
                    activated: true,
                    accounttype: "regular",
                    firstname: facebookdata.first_name,
                    lastname: facebookdata.last_name
                }, done);                
            }
        });
    } else

    /* TWITTER */
    if (data.twitterId) {
        var twitterdata = data.profile._json;
        User.all({
            where: {
                twitterId: twitterdata.id,
                // email: twitterdata.email,
                twitterAccessToken: data.token,
                twitterAccessTokenSecret: data.tokenSecret
            }, limit: 1
        }, function (err, user) {
            if (user[0]){
                console.log("got twitter user")
                console.log(user[0])
                return done(err, user[0]);
            } 
            else{
                // console.log("check if already a user")
                // console.log(req)

                console.log("create a new user")
                User.create({
                    twitterId: twitterdata.id,
                    twitterAccessToken: data.token,
                    twitterAccessTokenSecret: data.tokenSecret,
                    twitterUsername: twitterdata.screen_name,
                    url: twitterdata.url,
                    image: twitterdata.profile_image_url,
                    image_https: twitterdata.profile_image_url_https,
                    description: twitterdata.description,
                    activated: true,
                    accounttype: "regular"
                }, done);                
            }
        });
    } else

    /* LOCAL */
    if (data.email) {
        User.all({
            where: {
                email: data.email
            }, limit: 1
        }, function (err, user) {
            if (user[0]) return done(err, user[0]);
            if (!user[0]) return done(err);
        });
    } else

    // =========================================================
    // ==================== connecting accounts ================
    // =========================================================

    /* GITHUB */
    if (data.githubId) {
        User.all({
            where: {
                githubId: data.githubId
            }, limit: 1
        }, function (err, user) {
            if (user[0]) return done(err, user[0]);
            User.create({
                githubId: data.githubId,
                displayName: data.profile.displayName || data.profile.username
            }, done);
        });
    } else

    /* GOOGLE OPENID */
    if (data.openId) {
        User.all({
            where: {
                googleId: data.openId
            }, limit: 1
        }, function (err, user) {
            if (user[0]) return done(err, user[0]);
            User.create({
                displayName: data.profile.displayName,
                email: data.profile.emails[0].value,
                googleId: data.openId
            }, done);
        });
    } else

    /* LINKEDIN */
    if (data.linkedinId) {
        User.all({
            where: {
                linkedinId: data.linkedinId
            }, limit: 1
        }, function (err, user) {
            if (user[0]) return done(err, user[0]);
            User.create({
                displayName: data.profile.displayName,
                linkedinId: data.linkedinId
            }, done);
        });
    } else


    /* SOMETHING NOT KNOWN YET */
    {
        console.log("no strategy for data return")
        //console.log(data.profile);
    }
};

/** Example user schema (jugglingdb + railwayjs):
 *
 * define('User', function () {
 *     property('displayName', String);
 *     property('email', String, { index: true });
 *     property('googleId', String, { index: true });
 *     property('githubId', String, { index: true });
 *     property('linkedinId', String, { index: true });
 * });
 */

