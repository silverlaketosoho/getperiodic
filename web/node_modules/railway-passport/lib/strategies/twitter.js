var passport = require('passport');

exports.callback = function(token, tokenSecret, profile, done) {
    // console.log(session)
    User.findOrCreate({
        twitterId: profile.id,
        profile: profile,
        token: token,
        tokenSecret: tokenSecret
    }, function (err, user) {
        return done(err, user);
    });
};

exports.callbackConnect = function(token, tokenSecret, profile, done) {
    console.info("staring callback for twitter account auth")
    User.findOne({where: { twitterAccessToken: token, twitterAccessTokenSecret: tokenSecret, twitterId: profile.id }}, function(err, account) {
        if (err) { return done(err); }
        if (account) { return done(null, account) }

        var account = new User();
        // console.log(profile)
        account.twitterId = profile.id;
        account.twitterUsername = profile.username;
        account.twitterAccessToken = token;
        account.twitterAccessTokenSecret = tokenSecret;

        //.tok = { kind: 'oauth', token: token, attributes: { tokenSecret: tokenSecret } };
        return done(null, account);
    });
};


exports.init = function (conf) {
    var Strategy = require('passport-twitter').Strategy;
    passport.use(new Strategy({
        consumerKey: conf.twitter.apiKey,
        consumerSecret: conf.twitter.secret,
        callbackURL: conf.baseURL + 'auth/twitter/callback'
    }, exports.callback));

    passport.use('twitter-connect', new Strategy({
        consumerKey: conf.twitter.apiKey,
        consumerSecret: conf.twitter.secret,
        callbackURL: conf.baseURL + 'connect/twitter/callback'
    }, exports.callbackConnect));


    app.get('/auth/twitter',
        passport.authenticate('twitter'));

    app.get('/auth/twitter/callback',
        passport.authenticate('twitter', {
            failureRedirect: conf.failureRedirect || '/'
        }), exports.redirectOnSuccess);


    // Redirect to Twitter for account authorization.
    app.get('/connect/twitter',
      passport.authorize('twitter-connect', { failureRedirect: '/connect/accounts' })
    );

    app.get('/connect/twitter/callback',
      passport.authorize('twitter-connect', { failureRedirect: '/connect/accounts' }),
      function(req, res) {
        // req.user.twitterId = req.account.twitterId;  
        // req.user.twitterUsername = req.account.twitterUsername;  
        // req.user.twitterAccessToken = req.account.twitterAccessToken;
        // req.user.twitterAccessTokenSecret = req.account.twitterAccessTokenSecret;
        // req.user.twitterAccessTokenSecret = req.account.twitterAccessTokenSecret;
        var user = req.user;
        // var account = req.account;
        user.updateAttributes({
            twitterId: req.account.twitterId,
            twitterUsername: req.account.twitterUsername,
            twitterAccessToken: req.account.twitterAccessToken,
            twitterAccessTokenSecret: req.account.twitterAccessTokenSecret,
            updatedAt: new Date()
        },function(err){
            req.flash('info', 'Twitter account linked!');
            res.redirect('/connect/accounts');
        });
      }
    );

};
