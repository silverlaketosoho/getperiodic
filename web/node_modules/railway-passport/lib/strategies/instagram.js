var passport = require('passport');

exports.callbackConnect = function(token, tokenSecret, profile, done) {
    console.info("staring callback for instagram account connect auth")
    // console.info(profile)
    // console.info(token)
    // console.info(tokenSecret)
    User.findOne({where: { 
            instagramId: profile.id, 
            instagramAccessToken: token }
        }, function(err, account) {
        if (err) { return done(err); }
        if (account) { return done(null, account) }

        var account = new User();
        account.instagramId = profile.id;
        account.instagramAccessToken = token;
        return done(null, account);
    });
};

exports.init = function (conf) {
    var Strategy = require('passport-instagram').Strategy;
    passport.use(new Strategy({
        clientID: conf.instagram.apiKey,
        clientSecret: conf.instagram.secret,
        callbackURL: conf.baseURL + 'auth/instagram/callback'
    }, exports.callback));

    passport.use('instagram-connect', new Strategy({
        clientID: conf.instagram.apiKey,
        clientSecret: conf.instagram.secret,
        callbackURL: conf.baseURL + 'connect/instagram/callback'
    }, exports.callbackConnect));

    // Redirect to instagram for account authorization.
    app.get('/connect/instagram',
      passport.authorize('instagram-connect', { failureRedirect: '/connect/accounts' })
    );

    app.get('/connect/instagram/callback',
      passport.authorize('instagram-connect', { failureRedirect: '/connect/accounts' }),
      function(req, res) {
        var user = req.user;
        // var account = req.account;
        user.updateAttributes({
            instagramId: req.account.instagramId,
            instagramAccessToken: req.account.instagramAccessToken,
            // instagramAccessTokenSecret: req.account.instagramAccessTokenSecret,
            updatedAt: new Date()
        },function(err){
            req.flash('info', 'instagram account linked!');
            res.redirect('/connect/accounts');
        });
      }
    );

};
