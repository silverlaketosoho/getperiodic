var passport = require('passport');

exports.callback = function(token, tokenSecret, profile, done) {
    console.info("in callback for facebook strategy")
    User.findOrCreate({
        facebookId: profile.id,
        profile: profile,
        token: token
    }, function (err, user) {
        return done(err, user);
    });
};

exports.callbackConnect = function(token, tokenSecret, profile, done) {
    console.info("staring callback for facebook account connect auth")
    User.findOne({where: { facebookId: profile.id, email: profile._json.email, facebookAccessToken: token }}, function(err, account) {
        if (err) { return done(err); }
        if (account) { return done(null, account) }

        var account = new User();
        // console.log(profile)
        account.facebookId = profile.id;
        account.facebookUsername = profile.username;
        account.email = profile._json.email;
        account.facebookAccessToken = token;
        //.tok = { kind: 'oauth', token: token, attributes: { tokenSecret: tokenSecret } };
        return done(null, account);
    });
};

exports.init = function (conf) {
    var Strategy = require('passport-facebook').Strategy;
    passport.use(new Strategy({
        clientID: conf.facebook.apiKey,
        clientSecret: conf.facebook.secret,
        callbackURL: conf.baseURL + 'auth/facebook/callback'
    }, exports.callback));

    passport.use('facebook-connect', new Strategy({
        clientID: conf.facebook.apiKey,
        clientSecret: conf.facebook.secret,
        callbackURL: conf.baseURL + 'connect/facebook/callback'
    }, exports.callbackConnect));


    app.get('/auth/facebook',
        passport.authenticate('facebook', { scope: [ 'email','publish_actions','offline_access','user_status' ,'user_likes','user_checkins','user_about_me','user_photo_video_tags','read_stream'] }));

    app.get('/auth/facebook/callback',
        passport.authenticate('facebook', {
            failureRedirect: conf.failureRedirect || '/'
        }), exports.redirectOnSuccess);

    // Redirect to Facebook for account authorization.
    app.get('/connect/facebook',
      passport.authorize('facebook-connect', { failureRedirect: '/connect/accounts' })
    );

    app.get('/connect/facebook/callback',
      passport.authorize('facebook-connect', { failureRedirect: '/connect/accounts' }),
      function(req, res) {
        // req.user.twitterId = req.account.twitterId;  
        // req.user.twitterUsername = req.account.twitterUsername;  
        // req.user.twitterAccessToken = req.account.twitterAccessToken;
        // req.user.twitterAccessTokenSecret = req.account.twitterAccessTokenSecret;
        // req.user.twitterAccessTokenSecret = req.account.twitterAccessTokenSecret;
        var user = req.user;
        // var account = req.account;
        user.updateAttributes({
            facebookId: req.account.facebookId,
            facebookUsername: req.account.facebookUsername,
            facebookAccessToken: req.account.facebookAccessToken,
            updatedAt: new Date()
        },function(err){
            req.flash('info', 'Facebook account linked!');
            res.redirect('/connect/accounts');
        });
      }
    );

};
